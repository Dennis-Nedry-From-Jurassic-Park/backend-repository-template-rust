name: "Check_Build_Test"

on:
  pull_request:
  workflow_run:
    workflows:
      - "Security_audit"
    types: [completed]

env:
  CARGO_TERM_COLOR: always

jobs:

  cache:
    name: cache
    runs-on: ubuntu-latest
    steps:
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: false

  check:
    name: check
    runs-on: ubuntu-latest
    needs:
      - cache
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  code_coverage_llvm:
    name: code_coverage_llvm
    runs-on: ubuntu-latest
    needs:
      - check
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # not required for public repos
          files: lcov.info
          fail_ci_if_error: false

  code_coverage:
    name: code_coverage
    runs-on: ubuntu-latest
    needs:
      - check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  build_and_test:
    name: build_and_test
    runs-on: ubuntu-latest
    needs:
      - check
      - code_coverage
      - code_coverage_llvm
    strategy:
      matrix:
        toolchain:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v2
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: cargo build --verbose
      - run: cargo test --verbose
